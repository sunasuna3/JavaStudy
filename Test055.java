/*==============================================
  ■■■ 실행 흐름의 컨트롤 (제어문) ■■■
  -   - 반복문(do~while) 실습
===============================================*/

//실습 문제
// 사용자로부터 여러 개의 정수를 입력받아
// 그 합을 계산하여 결과를 출력해주는 프로그램을 구현한다.
//단, 사용자가 『-1』 을 입력시
//입력받는 행위를 중지하고
//그동안 입력받아둔 정수들의 합을 출력할 수 있도록 구현한다.
//입력받는 과정은 Scanner 인스턴스를 생성하여 처리한다.

// 실행 예)
//1번째 정수 입력(-1 종료): 10
//2번째 정수 입력(-1 종료): 10
//3번째 정수 입력(-1 종료): 5
//4번째 정수 입력(-1 종료): 8
//5번째 정수 입력(-1 종료): 9
//6번째 정수 입력(-1 종료): -1

// >>현재까지 입력된 정수의 합 : 42
//계속하려면 아무 키나 누르세요...

//사용자가 처음에 -1을 입력하더라도 입력 받아와야 -1인지 

import java.util.Scanner;
public class Test055
{
	public static void main(String [] args) 
	{
		/*
		Scanner sc = new Scanner (System.in);

		int n=1; //반복 
		int a;  //입력
		int sum=0;

		do
		{
			System.out.printf(" %d번째 정수 입력(-1 종료) :", n);
			a = sc.nextInt();
			sum += a;
			n++;

		}
		while (a != -1);
		System.out.printf("\n >>현재까지 입력된 정수의 합 : %d \n",sum+1);		
		*/

		//Scanner 인스턴스 생성
		Scanner sc = new Scanner (System.in);

		//○ 주요 변수 선언
		int num;    //--외부로부터 사용자 입력값을 담아둘 변수
		int sum=0; //--누적합을 담을 변수
		int n=1; //-1번째 정수 입력하세요 부터 시작하기 때문에 1부터 시작    // 몇 번째 변수인지 담아둘 


		//○ 연산 및 처리
		do
		{
			System.out.printf(" %d번째 정수 입력(-1 종료) : ", n);
			
			//입력도 계속 받아야 하기때문에 반복문 안에
			num=sc.nextInt();
			sum += num;
			n++;

		}
		while (num != -1);

		//○ 결과 출력
		System.out.printf("\n >>현재까지 입력된 정수의 합 : %d\n",(sum+1));  //-1은 마지막에 의사표현하는 수단이기때문에 마지막 합에 -1을 더해준거에 +1 해야 오차 없음


		//○ 결과 출력





	}
}

//실행 결과
/*
 1번째 정수 입력(-1 종료) :10
 2번째 정수 입력(-1 종료) :10
 3번째 정수 입력(-1 종료) :5
 4번째 정수 입력(-1 종료) :8
 5번째 정수 입력(-1 종료) :9
 6번째 정수 입력(-1 종료) :-1

 >>현재까지 입력된 정수의 합 : 42
계속하려면 아무 키나 누르십시오 . . .
*/

/*
 1번째 정수 입력(-1 종료) : 10
 2번째 정수 입력(-1 종료) : 20
 3번째 정수 입력(-1 종료) : 30
 4번째 정수 입력(-1 종료) : 40
 5번째 정수 입력(-1 종료) : 50
 6번째 정수 입력(-1 종료) : -1

 >>현재까지 입력된 정수의 합 : 150
계속하려면 아무 키나 누르십시오 . . .
*/